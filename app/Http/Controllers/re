<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Sale;
use App\SaleDetail;
use App\Supplier;
use App\Inventory;
use App\User;
use Carbon\Carbon;
use Illuminate\Support\Facades\DB;
use App\Exports\SaleReportExport;
use App\Exports\SaleDayExport;
use Maatwebsite\Excel\Facades\Excel;
use DataTables;

class ReportController extends Controller
{
    public function index(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d H:i:s", strtotime($request->date_start));
            $date_end = date("Y-m-d H:i:s", strtotime($request->date_end));
            $sale = DB::table('sales')->select([
                DB::raw("to_char(created_at, '%d-%m-%Y') as date"),
                DB::raw("SUM(total_hpp) as total_hpp"),
                DB::raw("SUM(total_price) as total_price"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('date')->orderBy('createdAt')->get();
            // $hmtl = array();
            $html['daily'] = '';
            $html['day'] = '';
            $html['cash'] = '';
            $html['transfer'] = '';
            $html['credit'] = '';
            $i = 0;
            foreach ($sale as $sale) {
                $html['daily'] .= '<tr>
                    <td>' . ++$i . '</td>
                    <td>' . date("d M Y", strtotime($sale->date)) . '</td>
                    <td>' . 'Rp. ' . number_format($sale->total_hpp, 0, ',', '.') . '</td>
                    <td>' . 'Rp. ' . number_format($sale->total_price, 0, ',', '.') . '</td>
                    <td>' . 'Rp. ' . number_format($sale->total_vatprice, 0, ',', '.') . '</td>
                </tr>';
            }
            $cardz = DB::table('sales')->select([
                DB::raw("to_char(created_at, '%Y') as month"),
                DB::raw("SUM(total_hpp) as total_hpp"),
                DB::raw("SUM(total_price) as total_price"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('month')->orderBy('createdAt')->get();

            foreach ($cardz as $cardz) {
                $html['day'] .=  '
                    <tr>
                        <th id="total" colspan="4">Total</th>
                        <td>' . 'Rp. ' . number_format($cardz->total_vatprice, 0, ',', '.') . '</td>
                    </tr>';
            }

            $sale_cash = DB::table('sales')->select([
                DB::raw("to_char(created_at, '%Y') as month"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->where('payment_type', 'cash')->groupBy('month')->orderBy('createdAt')->get();
            foreach ($sale_cash as $sale) {
                $html['cash'] .= 'Rp. ' . number_format($sale->total_vatprice, 0, ',', '.');
            }

            $saleBank = DB::table('sales')->select([
                DB::raw("to_char(created_at, '%Y') as month"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->where('payment_type', 'bank transfer')->groupBy('month')->orderBy('createdAt')->get();

            foreach ($saleBank as $saleBank) {
                $html['transfer'] .= 'Rp. ' . number_format($saleBank->total_vatprice, 0, ',', '.');
            }

            $saleCard = DB::table('sales')->select([
                DB::raw("to_char(created_at, '%Y') as month"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->where('payment_type', 'payment Card')->groupBy('month')->orderBy('createdAt')->get();

            foreach ($saleCard as $saleCard) {
                $html['credit'] .= 'Rp. ' . number_format($saleCard->total_vatprice, 0, ',', '.');
            }

            return json_encode($html);
        }

        return view('report.index');
    }

    public function resume(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d H:i:s", strtotime($request->date_start));
            $date_end = date("Y-m-d H:i:s", strtotime($request->date_end));
            $html = '';
            $i = 0;
            // $sale_detail = SaleDetail::select(DB::raw('count(menu_id) as count, menu_id'))->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('menu_id')->get();
            $sale_detail = DB::table('sale_details')->selectRaw('menu_name, SUM(quantity) as count')->groupBy('menu_name')->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('menu_name')->get();
            foreach ($sale_detail as $sale_detail) {
                $html .= '<tr>
                    <td>' . ++$i . '</td>
                    <td>' . $sale_detail->menu_name . '</td>
                    <td>' . $sale_detail->count  . '</td>
                </tr>';
            }
            return json_encode($html);
        }
    }

    public function detail($id)
    {
        $sales = Sale::find($id);
        $saleDetail = SaleDetail::where('sale_id', $sales->id)->get();
        return view('report.show')->with('saleDetail', $saleDetail);
    }

    public function reportExcel(Request $request)
    {
        $date_start = $request->date_start;
        $date_end = $request->date_end;
        // dd($date_end);
        // dd($request->date_start);
        return Excel::download(new SaleReportExport($date_start, $date_end), 'saleReport.xlsx');
    }

    public function dayExcel(Request $request)
    {
        $date_start = $request->date_start;
        $date_end = $request->date_end;
        // dd($date_start);
        return Excel::download(new SaleDayExport($date_start, $date_end), 'saleReport.xlsx');
    }

    public function month(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d", strtotime($request->date_start));
            $date_end = date("Y-m-d", strtotime($request->date_end));
            $cards = Sale::select([
                DB::raw("DATE_FORMAT(created_at, '%Y-%m') as month"),
                DB::raw("SUM(total_hpp) as total_hpp"),
                DB::raw("SUM(total_price) as total_price"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('month')->orderBy('createdAt')->get();


            $html['sale_month'] = '';
            $html['sum_month'] = '';
            $html['cash'] = '';
            $html['bank'] = '';
            $html['card'] = '';
            $html['menu'] = '';
            $i = 0;
            $j = 0;
            foreach ($cards as $cards) {
                $html['sale_month'] .= '<tr>
                    <td>' . ++$i . '</td>
                    <td>' . date("M Y", strtotime($cards->month)) . '</td>
                    <td>' . 'Rp. ' . number_format($cards->total_hpp, 0, ',', '.') . '</td>
                    <td>' . 'Rp. ' . number_format($cards->total_price, 0, ',', '.') . '</td>
                    <td>' . 'Rp. ' . number_format($cards->total_vatprice, 0, ',', '.') . '</td>
                </tr>';
            }

            $card = Sale::select([
                DB::raw("DATE_FORMAT(created_at, '%Y') as month"),
                DB::raw("SUM(total_hpp) as total_hpp"),
                DB::raw("SUM(total_price) as total_price"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('month')->orderBy('createdAt')->get();

            foreach ($card as $card) {
                $html['sum_month'] .=  '
                    <tr>
                        <th id="total" colspan="4">Total</th>
                        <td>' . 'Rp. ' . number_format($card->total_vatprice, 0, ',', '.') . '</td>
                    </tr>';
            }

            $sale_payment = Sale::select([
                DB::raw("DATE_FORMAT(created_at, '%Y') as month"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->where('payment_type', 'cash')->groupBy('month')->orderBy('createdAt')->get();
            foreach ($sale_payment as $sale) {
                $html['cash'] .= 'Rp. ' . number_format($sale->total_vatprice, 0, ',', '.');
            }

            $salez = Sale::select([
                DB::raw("DATE_FORMAT(created_at, '%Y') as month"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->where('payment_type', 'bank transfer')->groupBy('month')->orderBy('createdAt')->get();

            foreach ($salez as $salez) {
                $html['bank'] .= 'Rp. ' . number_format($salez->total_vatprice, 0, ',', '.');
            }

            $saleCard = Sale::select([
                DB::raw("DATE_FORMAT(created_at, '%Y') as month"),
                DB::raw("SUM(total_vatprice) as total_vatprice"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->where('payment_type', 'payment Card')->groupBy('month')->orderBy('createdAt')->get();

            foreach ($saleCard as $saleCard) {
                $html['card'] .= 'Rp. ' . number_format($saleCard->total_vatprice, 0, ',', '.');
            }

            // $saleDetail = SaleDetail::select(DB::raw('count(menu_name) as count, menu_name'))->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('menu_name')->get();
            $saleDetail = DB::table('sale_details')->selectRaw('menu_name, SUM(quantity) as count')->groupBy('menu_name')->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('menu_name')->get();
            foreach ($saleDetail as $saleDetail) {
                $html['menu'] .= '
                        <tr>
                            <td>' . ++$j . '</td>
                            <td>' . $saleDetail->menu_name . '</td>
                            <td>' . $saleDetail->count . '</td>
                        </tr>';
            }
            return json_encode($html);
        }
        $count_month = Sale::select([
            DB::raw("DATE_FORMAT(created_at, '%m-%Y') as month"),
            DB::raw("SUM(total_vatprice) as total_vatprice"),
            DB::raw('max(created_at) as createdAt')
        ])->groupBy('month')->orderBy('createdAt')->get();
        $month_name = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'];
        $bulan = [];
        $data = [];
        foreach ($count_month as $count_month) {
            $month = $count_month->month;
            $month_number = explode("-", $month)[0];
            $year = explode("-", $month)[1];
            array_push($bulan, $month_name[$month_number - 1] . ' ' . $year);
            array_push($data, $count_month->total_vatprice);
        }
        // $formatted_array = array_map(function ($num) {
        //     return number_format($num, 2, ',', '.');
        // }, $data);

        return view('report.indexmonth', ['month' => json_encode($bulan), 'data' => json_encode($data)]);
    }

    public function employee(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d H:i:s", strtotime($request->date_start . '00:00:00'));
            $date_end = date("Y-m-d H:i:s", strtotime($request->date_end . '23:59:59'));

            $sales = Sale::select(DB::raw('count(user_name) as count, user_name'))->groupBy('user_name')->whereBetween('updated_at', [$date_start, $date_end])->where('sale_status', 'paid')->where(function ($sale) {
                $sale->whereHas('user', function ($sale) {
                    return $sale->role('cashier');
                });
            })->get();
            // $html = array();
            $html = '';
            foreach ($sales as $sale) {
                $html .= '<tr>
                    <td>' . $sale->user_name . '</td>
                    <td>' . $sale->count . '</td>
                </tr>';
            }
            return json_encode($html);
        }
        return view('report.employee');
    }

    public function purchase(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d", strtotime($request->date_start));
            $date_end = date("Y-m-d", strtotime($request->date_end));
            $html['total'] = '';
            $html['footer'] = '';
            $html['detail'] = '';
            $i = 0;
            $j = 0;
            $purchase = Supplier::select([
                DB::raw("DATE_FORMAT(created_at, '%Y-%m') as month"),
                DB::raw("SUM(total) as total"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('month')->orderBy('createdAt')->get();
            foreach ($purchase as $purchase) {
                $html['total'] .= '<tr>
                    <td>' . ++$i . '</td>
                    <td>' . $purchase->month . '</td>
                    <td>' . 'Rp. ' .  number_format($purchase->total, 0, ',', '.') . '</td>
                </tr>';
            }

            $purc = Supplier::select([
                DB::raw("DATE_FORMAT(created_at, '%Y') as month"),
                DB::raw("SUM(total) as total"),
                DB::raw('max(created_at) as createdAt')
            ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('month')->orderBy('createdAt')->get();

            foreach ($purc as $purc) {
                $html['footer'] = '<tr>
                        <th id="total" colspan="2">Total</th>
                        <td>' . 'Rp. ' . number_format($purc->total, 0, ',', '.') . '</td>
                    </tr>';
            }

            $detail = Supplier::select(DB::raw('count(name) as count, name'))->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('name')->get();

            foreach ($detail as $detail) {
                $html['detail'] .= '<tr>
                    <td>' . ++$j . '</td>
                    <td>' . $detail->name . '</td>
                    <td>' . $detail->count . '</td>
                </tr>';
            }
            return json_encode($html);
        }
        return view('report.purchase');
    }

    public function purchaseTotal(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d H:i:s", strtotime($request->date_start . ' 00:00:00'));
            $date_end = date("Y-m-d H:i:s", strtotime($request->date_end . ' 23:59:59'));
            $purchase = Supplier::whereBetween('updated_at', [$date_start, $date_end])->get();
            $html['total'] = 0;
            foreach ($purchase as $purchase) {
                $html['total'] += $purchase->total;
            }
            $html['total'] = number_format($html['total'], 0, ',', '.');
        }
        return json_encode($html);
    }

    public function customers(Request $request)
    {
        if ($request->ajax()) {
            $data = Sale::where('customer_phone', '!=', '')->get();
            return DataTables()->of($data)
                ->addColumn('customer_name', function ($data) {
                    return $data->customer_name;
                })
                ->addColumn('customer_phone', function ($data) {
                    return $data->customer_phone;
                })
                ->addIndexColumn()
                ->rawColumns(['customer_name', 'customer_phone'])
                ->make(true);
        }
        return view('report.customer');
    }
}


//index
@extends('layouts.default')

@section('content')
    <div class="container">
            <div class="card-body">
                <div class="row input-daterange">
                    <div class="col-md-3 form-group">
                        <input type="text" name="date_start" id="date_start" class="form-control" placeholder="from date.." readonly />
                    </div>
                    <div class="col-md-3 form-group">
                        <input type="text" name="date_end" id="date_end" class="form-control" placeholder="end date.." readonly />
                    </div>
                    <div class="col-md-3">
                        <button type="button" name="filter" id="filter" class="btn text-black" style="background-color: #90be6d">Filter</button>
                        <button type="button" name="refresh" id="refresh" class="btn text-black" style="background-color: #90be6d">Refresh</button>
                    </div>
                    <div class="col-md-3">
                        <button type="button" class="btn text-black excel" style="background-color: #90be6d">Export To Excel</button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12 text-center">
                            <div style="font-size: 26px; font-weight: 510">Daily Sale And Menu report</div>
                            <span id="time" style="font-size: 24px"></span>
                        </div>
                        <div class="card-body">
                            <table id="" class="table table-bordered text-center" style="width:100%">
                                <thead class="text-black" style="background-color:#90be6d">
                                    <tr class="text-center">
                                        <th scope="col">No</th>
                                        <th scope="col">Date Time</th>
                                        <th scope="col">Total HPP</th>
                                        <th scope="col">Total Price</th>
                                        <th scope="col">Total Sale</th>
                                    </tr>
                                </thead>
                                <tbody id="sale_daily">

                                </tbody>
                                <tfoot id="sum_daily">
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="card-body">
                            <table class="table table-bordered text-center" style="width:100%">
                                <thead class="text-black" style="background-color:#90be6d">
                                    <tr class="text-lite text-center">
                                        <th scope="col">Total Cash</th>
                                        <th scope="col">Total Bank Transfer</th>
                                        <th scope="col">Total Credit</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="cash"></td>
                                        <td class="transfer"></td>
                                        <td class="credit"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="card-body">
                            <table id="f" class="table table-bordered text-center" style="width:100%">
                                <thead class="text-black" style="background-color:#90be6d">
                                    <tr class="text-lite text-center">
                                        <th scope="col">No</th>
                                        <th scope="col">Menu</th>
                                        <th scope="col">Total Sold</th>
                                    </tr>
                                </thead>
                                <tbody id="menus">

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
    </div>
@endsection

@push('after-script')
<script type="text/javascript">
$(document).ready(function(){
    $('.input-daterange').datepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
    });

    fecthData();
    function fecthData(date_start = '', date_end='')
    {
        $.ajax({
            url: "{{route('report.index')}}",
            type: "GET",
            dataType:"json",
            data: {date_start: date_start, date_end:date_end},
            success: function(data)
            {
                $('#sale_daily').html(data.daily);
                $('#sum_daily').html(data.day);
                $('.cash').html(data.cash);
                $('.transfer').html(data.transfer);
                $('.credit').html(data.credit);
            },
            error: function(data)
            {
                alert('not responding');
            }
        });
    }

    load_data();
    function load_data(date_start = '', date_end='')
    {
        $.ajax({
            url: "{{route('report.resume')}}",
            type: "GET",
            dataType:"json",
            data: {date_start: date_start, date_end:date_end},
            success: function(data)
            {
                $('#menus').html(data);
            },
            error: function(data)
            {
                alert('not responding');
            }
        });
    }

    $('.excel').click(function(){
        var date_start = $('#date_start').val();
        var date_end = $('#date_end').val();
        if(date_start != '' && date_end != ''){
            window.location.href = "/report/day/export?date_start="+date_start+"&date_end="+date_end;
        }else{
            alert('Both date is required');
        }
    });

    $('#filter').click(function(){
        var date_start = $('#date_start').val();
        var date_end = $('#date_end').val();
        if(date_start != '' && date_end != ''){
            $('#time').html(date_start).append(' to ', date_end );
            fecthData(date_start, date_end);
            load_data(date_start, date_end);
        }else{
            alert('Both date is required');
        }
    });

    $('#refresh').click(function(){
        $('#date_start').val('');
        $('#date_end').val('');
        $('#time').html('');
        fecthData();
        load_data();
    });
});
</script>
@endpush


// sale excel
<?php

namespace App\Exports;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use App\Sale;
use App\SaleDetail;
use Illuminate\Contracts\View\View;
use Maatwebsite\Excel\Concerns\FromView;
use Maatwebsite\Excel\Concerns\FromCollection;

class SaleDayExport implements FromView
{
    protected $date_start;
    protected $date_end;
    protected $sale;
    public function __construct($date_start, $date_end)
    {
        $this->date_start = $date_start;
        $this->date_end = $date_end;
        // dd($date_end);
    }

    public function view(): View
    {
        $sale = Sale::select([
            DB::raw("DATE_FORMAT(created_at, '%d-%m-%Y') as date"),
            DB::raw("SUM(total_hpp) as total_hpp"),
            DB::raw("SUM(total_price) as total_price"),
            DB::raw("SUM(total_vatprice) as total_vatprice"),
            DB::raw('max(created_at) as createdAt')
        ])->whereBetween(DB::raw('DATE(created_at)'), [$this->date_start, $this->date_end])->groupBy('date')->orderBy('createdAt')->get();
        $total = $sale->sum('total_vatprice');

        $saleCash = Sale::select([
            DB::raw("DATE_FORMAT(created_at, '%m') as month"),
            DB::raw("SUM(total_vatprice) as total_vatprice"),
            DB::raw('max(created_at) as createdAt')
        ])->whereBetween(DB::raw('DATE(created_at)'), [$this->date_start, $this->date_end])->where('payment_type', 'cash')->groupBy('month')->orderBy('createdAt')->get();

        $saleBank = Sale::select([
            DB::raw("DATE_FORMAT(created_at, '%m') as month"),
            DB::raw("SUM(total_vatprice) as total_vatprice"),
            DB::raw('max(created_at) as createdAt')
        ])->whereBetween(DB::raw('DATE(created_at)'), [$this->date_start, $this->date_end])->where('payment_type', 'bank transfer')->groupBy('month')->orderBy('createdAt')->get();

        $saleCredit = Sale::select([
            DB::raw("DATE_FORMAT(created_at, '%m') as month"),
            DB::raw("SUM(total_vatprice) as total_vatprice"),
            DB::raw('max(created_at) as createdAt')
        ])->whereBetween(DB::raw('DATE(created_at)'), [$this->date_start, $this->date_end])->where('payment_type', 'payment Card')->groupBy('month')->orderBy('createdAt')->get();

        $saleDetail = SaleDetail::select(DB::raw('count(menu_name) as count, menu_name'))->whereBetween(DB::raw('DATE(created_at)'), [$this->date_start, $this->date_end])->groupBy('menu_name')->get();

        return view('exports.dayreport', [
            'date_start' => $this->date_start,
            'date_end' => $this->date_end,
            'sale' => $sale,
            'total' => $total,
            'saleDetail' => $saleDetail,
            'saleCash' => $saleCash,
            'saleBank' => $saleBank,
            'saleCredit' => $saleCredit
        ]);
    }
}

<table>
    <thead>
        <tr>
            <th>No</th>
            <th>Date</th>
            <th>Total HPP</th>
            <th>Total Price</th>
            <th>Total Sale</th>
        </tr>
    </thead>
    <tbody>
        @foreach ($sale as $sale)
            <tr>
                <td>{{$loop->iteration}}</td>
                <td>{{$sale->date}}</td>
                <td>Rp. {{number_format($sale->total_hpp, 2, ',', '.')}}</td>
                <td>Rp. {{number_format($sale->total_price, 2, ',', '.')}}</td>
                <td>Rp. {{number_format($sale->total_vatprice, 2, ',', '.')}}</td>
            </tr>
        @endforeach
    </tbody>
    <tfoot>
        <tr>
            <th colspan="4">Total</th>
            <td>Rp. {{number_format($total, 2, ',', '.')}}</td>
        </tr>
    </tfoot>
</table>

<table>
    <thead>
        <tr>
            <th>Total Cash</th>
            <th>Total Transfer Bank</th>
            <th>Total Credit Card</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            @foreach ($saleCash as $saleCash)
                <td>Rp. {{number_format($saleCash->total_vatprice, 2, ',', '.')}}</td>
            @endforeach
            @foreach ($saleBank as $saleBank)
                <td>Rp. {{number_format($saleBank->total_vatprice, 2, ',', '.')}}</td>
            @endforeach
            @foreach ($saleCredit as $saleCredit)
                <td>Rp. {{number_format($saleCredit->total_vatprice, 2, ',', '.')}}</td>
            @endforeach
        </tr>
    </tbody>
</table>

<table>
    <thead>
        <tr>
            <th>No</th>
            <th>Menu Name</th>
            <th>Total Sold</th>
        </tr>
    </thead>
    @foreach ($saleDetail as $saleDetail)
        <tr>
            <td>{{$loop->iteration}}</td>
            <td>{{$saleDetail->menu_name}}</td>
            <td>{{$saleDetail->count}}</td>
        </tr>
    @endforeach
</table>

$sale = DB::table('sales')->select([
            DB::raw(
                "to_char(created_at, 'YYYY') as month,
            (CASE WHEN payment_type = cash THEN SUM(total_vatprice) ELSE 0 END) as total_cash,
            (CASE WHEN payment_type = bank transfer THEN SUM(total_vatprice) ELSE 0 END) as total_bank,
            (CASE WHEN payment_type = payment Card THEN SUM(total_vatprice) ELSE 0 END) as total_card"
            )
        ])->whereBetween(DB::raw('DATE(created_at)'), [$date_start, $date_end])->groupBy('month')->orderByRaw('max(created_at) asc')->get();


type_data();
    function type_data(date_start = '', date_end='')
    {
        var type = $('#type_daily').DataTable({
            responsive: true,
            serverSide: true,
            ordering: false,
            ajax: {
                url : "{{ route('report.typeDaily') }}",
                type: "GET",
                data: {date_start: date_start, date_end:date_end}
            },
            columns: [
            {data: 'cash', name: 'cash'},
            ],
        });
    }

let myChart = document.getElementById('chart').getContext('2d');
            let label = @php echo $month @endphp;
            let data = @php echo $data @endphp;
            let graphic = new Chart(myChart, {
                type: 'bar',
                data: {
                    labels: label,
                    datasets: [{
                        label: 'Sale Report',
                        data: data,
                        backgroundColor: '#90be6d',
                        borderWidth: 1,
                        borderColor: '#777',
                    }]
                },
                options: {
                    legend: {
                    display: false
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                            display: true,
                            drawBorder: false,
                            color: '#f2f2f2',

                            },
                            ticks: {
                                callback: function(value, index, values) {
                                    return new Intl.NumberFormat('id-ID').format(value)
                                }
                            }
                        }],
                        xAxes: [{
                            gridLines: {
                            display: false,
                            tickMarkLength: 15,
                            }
                        }]
                    }
                }
            });
