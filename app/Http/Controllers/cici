<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Sale;
use App\SaleDetail;
use App\Supplier;
use App\Inventory;
use App\User;
use Carbon\Carbon;

use Illuminate\Support\Facades\DB;
use App\Exports\SaleReportExport;
use Maatwebsite\Excel\Facades\Excel;
use DataTables;

class ReportController extends Controller
{
    public function index(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d H:i:s", strtotime($request->date_start . ' 00:00:00'));
            $date_end = date("Y-m-d H:i:s", strtotime($request->date_end . ' 23:59:59'));
            $sales = Sale::whereBetween('updated_at', [$date_start, $date_end])->where('sale_status', 'paid');
            return DataTables()->of($sales)
                ->editColumn('updated_at', function ($sales) {
                    $date = date('d M Y', strtotime($sales->updated_at));
                    return $date;
                })
                ->addColumn('total_hpp', function ($sales) {
                    $total_hpp = 'Rp. ';
                    $total_hpp .= number_format($sales->total_hpp, 0, ',', '.');
                    return $total_hpp;
                })
                ->addColumn('user_name', function ($sales) {
                    return $sales->user_name;
                })
                ->addColumn('total_price', function ($sales) {
                    $total_price = 'Rp. ';
                    $total_price .= number_format($sales->total_price, 0, ',', '.');
                    return $total_price;
                })
                ->addColumn('total_vat', function ($sales) {
                    return "$sales->total_vat %";
                })
                ->addColumn('total_vatprice', function ($sales) {
                    $total_price = 'Rp. ';
                    $total_price .= number_format($sales->total_vatprice, 0, ',', '.');
                    return $total_price;
                })
                ->addColumn('payment_type', function ($sales) {
                    return $sales->payment_type;
                })
                ->addColumn('action', function ($sales) {
                    $button = '<a href="' . route('report.detail', $sales->id) . '" style="cursor: pointer;" class="btn-show view-detail"><i class="fas fa-eye" style="color: black;"></i></a>';
                    return $button;
                })
                ->addIndexColumn()
                ->rawColumns(['updated_at', 'total_hpp', 'user_name', 'total_price', 'total_vat', 'total_vatprice', 'payment_type', 'action'])
                ->make(true);
        }

        $date_start = date("Y-m-d H:i:s", strtotime($request->date_start . ' 00:00:00'));
        $date_end = date("Y-m-d H:i:s", strtotime($request->date_end . ' 23:59:59'));
        $sales = Sale::whereBetween('updated_at', [$date_start, $date_end])->where('sale_status', 'paid');
        return view('report.index')->with('date_start', date("d/m/Y H:i:s", strtotime($request->date_start . ' 00:00:00')))->with('date_end', date('d/m/Y H:i:s', strtotime($request->date_end . ' 23:59:59')))->with('total', $sales->sum('total_hpp'))->with('total_price', $sales->sum('total_price'))->with('sales', $sales);
    }

    public function resume(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d H:i:s", strtotime($request->date_start . ' 00:00:00'));
            $date_end = date("Y-m-d H:i:s", strtotime($request->date_end . ' 23:59:59'));
            $sales = Sale::whereBetween('updated_at', [$date_start, $date_end])->where('sale_status', 'paid')->get();
            $html['hpp'] = 0;
            $html['price'] = 0;
            $html['vatprice'] = 0;
            $html['cash'] = 0;
            $html['bank'] = 0;
            $html['menus'] = '';

            $sale_payment = Sale::whereBetween('updated_at', [$date_start, $date_end])->where('sale_status', 'paid')->where('payment_type', 'cash')->get();
            foreach ($sale_payment as $payment) {
                $html['cash'] += $payment->total_vatprice;
            }

            $sale_bank = Sale::whereBetween('updated_at', [$date_start, $date_end])->where('sale_status', 'paid')->where('payment_type', 'bank transfer')->get();

            foreach ($sale_bank as $bank) {
                $html['bank'] += $bank->total_vatprice;
            }

            foreach ($sales as $sale) {
                $html['hpp'] += $sale->total_hpp;
                $html['price'] += $sale->total_price;
                $html['vatprice'] += $sale->total_vatprice;
            }
            $html['hpp'] = number_format($html['hpp'], 0, ',', '.');
            $html['price'] = number_format($html['price'], 0, ',', '.');
            $html['vatprice'] = number_format($html['vatprice'], 0, ',', '.');
            $html['cash'] = number_format($html['cash'], 0, ',', '.');
            $html['bank'] = number_format($html['bank'], 0, ',', '.');

            $sale_detail = SaleDetail::select(DB::raw('count(menu_name) as count, menu_name'))->groupBy('menu_name')->whereBetween('updated_at', [$date_start, $date_end])->get();
            foreach ($sale_detail as $sale_detail) {
                $html['menus'] .= '<tr>
                    <td>' . $sale_detail->menu_name . '</td>
                    <td>' . $sale_detail->count . '</td>
                </tr>';
            }

            return json_encode($html);
        }
    }

    public function detail($id)
    {
        $sales = Sale::find($id);
        $saleDetail = SaleDetail::where('sale_id', $sales->id)->get();
        return view('report.show')->with('saleDetail', $saleDetail);
    }

    public function reportExcel(Request $request)
    {
        if ($request->ajax()) {
            return Excel::download(new SaleReportExport($request->date_start, $request->date_end), 'saleReport.xlsx');
        }
    }

    public function month(Request $request)
    {
        // $products = Sale::select(DB::raw('count(created_at) as created_at, created_at'))->groupBy('created_at')->get();
        // $products = Sale::select('id', 'created_at')->get()->groupBy(function ($val) {
        //     return Carbon::parse($val->created_at)->format('F');
        // });
        // $products = DB::table('sales')
        //     ->select(DB::raw('date(created_at) as dates'))
        //     ->groupBy('dates')
        //     ->orderBy('dates', 'desc')
        //     ->get();
        // $products = Sale::get()
        //     ->groupBy(function ($item) {
        //         return $item->created_at->month;
        //     });
        $cards = Sale::select([
            // 'created_at',
            DB::raw("DATE_FORMAT(created_at, '%Y-%m') as month"),
            DB::raw("SUM(total_hpp) as total_hpp"),
            DB::raw("SUM(total_price) as total_price"),
            DB::raw("SUM(total_vatprice) as total_vatprice"),
        ])->groupBy('month')->orderBy('month')->get();

        // dd($cards);

        return view('report.indexmonth', ['cards' => $cards]);
    }

    public function employee(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d H:i:s", strtotime($request->date_start . ' 00:00:00'));
            $date_end = date("Y-m-d H:i:s", strtotime($request->date_end . ' 23:59:59'));
            $sales = Sale::select(DB::raw('count(user_name) as count, user_name'))->groupBy('user_name')->whereBetween('updated_at', [$date_start, $date_end])->where('sale_status', 'paid')->where(function ($sale) {
                $sale->whereHas('user', function ($sale) {
                    return $sale->role('cashier');
                });
            })->get();
            // $html = array();
            $html = '';
            foreach ($sales as $sale) {
                $html .= '<tr>
                    <td>' . $sale->user_name . '</td>
                    <td>' . $sale->count . '</td>
                </tr>';
            }
            return json_encode($html);
        }
        return view('report.employee');
    }

    public function purchase(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d H:i:s", strtotime($request->date_start . ' 00:00:00'));
            $date_end = date("Y-m-d H:i:s", strtotime($request->date_end . ' 23:59:59'));
            $purchase = Supplier::whereBetween('updated_at', [$date_start, $date_end]);
            return DataTables()->of($purchase)
                ->editColumn('date', function ($purchase) {
                    $date = date('d M Y', strtotime($purchase->date));
                    return $date;
                })
                ->addColumn('updated_at', function ($purchase) {
                    $input = date('d M Y', strtotime($purchase->updated_at));
                    return $input;
                })
                ->addColumn('name', function ($purchase) {
                    $name = $purchase->name;
                    return $name;
                })
                ->addColumn('total', function ($purchase) {
                    $total = 'Rp. ';
                    $total .= number_format($purchase->total, 0, ',', '.');
                    return $total;
                })
                ->addIndexColumn()
                ->rawColumns(['date', 'name', 'total', 'updated_at'])
                ->make(true);
        }
        return view('report.purchase');
    }

    public function purchaseTotal(Request $request)
    {
        if ($request->ajax()) {
            $date_start = date("Y-m-d H:i:s", strtotime($request->date_start . ' 00:00:00'));
            $date_end = date("Y-m-d H:i:s", strtotime($request->date_end . ' 23:59:59'));
            $purchase = Supplier::whereBetween('updated_at', [$date_start, $date_end])->get();
            $html['total'] = 0;
            foreach ($purchase as $purchase) {
                $html['total'] += $purchase->total;
            }
            $html['total'] = number_format($html['total'], 0, ',', '.');
        }
        return json_encode($html);
    }
}



    // public function show(Request $request)
    // {
    //     $request->validate([
    //         'dateStart' => 'required',
    //         'dateEnd' => 'required'
    //     ]);
    //     $dateStart = date("Y-m-d H:i:s", strtotime($request->dateStart . ' 00:00:00'));
    //     $dateEnd = date("Y-m-d H:i:s", strtotime($request->dateEnd . ' 23:59:59'));

    //     $sales = Sale::whereBetween('updated_at', [$dateStart, $dateEnd])->where('sale_status', 'paid');
        // return view('report.showReport')->with('dateStart', date("d-m-Y H:i:s", strtotime($request->dateStart . ' 00:00:00')))->with('dateEnd', date("d-m-Y H:i:s", strtotime($request->dateEnd . ' 23:59:59')))->with('totalSale', $sales->sum('total_price'))->with('sales', $sales->paginate(5));
    // }



    // public function dataTable(Request $request)
    // {
    //     // $request->validate([
    //     //     'dateStart' => 'required',
    //     //     'dateEnd' => 'required'
    //     // ]);
    //     // $dateStart = date("Y-m-d H:i:s", strtotime($request->dateStart . ' 00:00:00'));
    //     // $dateEnd = date("Y-m-d H:i:s", strtotime($request->dateEnd . ' 23:59:59'));
    //     // $babi = Sale::whereBetween('updated_at', [$dateStart, $dateEnd])->where('sale_status', 'paid');
    //     // $sales('dateStart', date("d-m-Y H:i:s", strtotime($request->dateStart . ' 00:00:00')))->with('dateEnd', date("d-m-Y H:i:s", strtotime($request->dateEnd . ' 23:59:59')))->with('totalSale', $sales->sum('total_price'))->with('sales', $sales->paginate(5));

    //     // $saless = Sale::where('id', $sales->id)->get();
    //     // dd($saless);
    //     $sales = Sale::all();
    //     return DataTables()->of($sales)
    //         ->editColumn('updated_at', function ($sales) {
    //             $date = date('d M Y', strtotime($sales->updated_at));
    //             return $date;
    //             // return $sales->updated_at;
    //             // return $sales->updated_at;
    //         })
    //         ->addColumn('total_hpp', function ($sales) {
    //             $total_hpp = 'Rp. ';
    //             $total_hpp .= number_format($sales->total_hpp, 0, ',', '.');
    //             return $total_hpp;
    //         })
    //         ->addColumn('user_name', function ($sales) {
    //             return $sales->user_name;
    //         })
    //         ->addColumn('total_price', function ($sales) {
    //             $total_price = 'Rp. ';
    //             $total_price .= number_format($sales->total_price, 0, ',', '.');
    //             return $total_price;
    //         })
    //         ->addColumn('total_vat', function ($sales) {
    //             return "$sales->total_vat %";
    //         })
    //         ->addColumn('total_vatprice', function ($sales) {
    //             $total_price = 'Rp. ';
    //             $total_price .= number_format($sales->total_vatprice, 0, ',', '.');
    //             return $total_price;
    //         })
    //         ->addColumn('payment_type', function ($sales) {
    //             return $sales->payment_type;
    //         })
    //         ->addColumn('action', function ($sales) {
    //             $button = '<a href="' . route('report.detail', $sales->id) . '" style="cursor: pointer;" class="btn-show view-detail"><i class="fas fa-eye" style="color: black;"></i></a>';
    //             return $button;
    //         })
    //         ->addIndexColumn()
    //         ->rawColumns(['updated_at', 'total_hpp', 'user_name', 'total_price', 'total_vat', 'total_vatprice', 'payment_type', 'action'])
    //         ->make(true);
    // }



    // public function showreport(Request $request)
    // {
    //     $request->validate([
    //         'dateStart' => 'required',
    //         'dateEnd' => 'required'
    //     ]);
    //     $dateStart = date("Y-m-d H:i:s", strtotime($request->dateStart . ' 00:00:00'));
    //     $dateEnd = date("Y-m-d H:i:s", strtotime($request->dateEnd . ' 23:59:59'));

    //     $supplier = Supplier::whereBetween('updated_at', [$dateStart, $dateEnd]);
    //     return view('purchasereport.showReport')->with('dateStart', date("d-m-Y H:i:s", strtotime($request->dateStart . ' 00:00:00')))->with('dateEnd', date("d-m-Y H:i:s", strtotime($request->dateEnd . ' 23:59:59')))->with('total', $supplier->sum('total'))->with('supplier', $supplier->paginate(5));
    // }

    // public function purchaseData(){

    // }
// }


@extends('layouts.default')

@section('content')
    <div class="container">
            <div class="card-body">
                <div class="row input-daterange">
                    <div class="col-md-4 form-group">
                        <input type="text" name="date_start" id="date_start" class="form-control" placeholder="from date.." readonly style="width: 300px;" />
                    </div>
                    <div class="col-md-4 form-group">
                        <input type="text" name="date_end" id="date_end" class="form-control" placeholder="end date.." readonly style="width: 300px;"  />
                    </div>
                    <div class="col-md-4">
                        <button type="button" name="filter" id="filter" class="btn btn-primary">Filter</button>
                        <button type="button" name="refresh" id="refresh" class="btn btn-primary">Refresh</button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="card-body">
                            <table id="datatable" class="table table-bordered text-center" style="width:100%">
                                <thead>
                                    <tr class="text-lite text-center">
                                        <th scope="col">No</th>
                                        <th scope="col">Date Time</th>
                                        <th scope="col">Staff</th>
                                        <th scope="col">Total HPP</th>
                                        <th scope="col">Total Amount</th>
                                        <th scope="col">Total VAT</th>
                                        <th scope="col">Total Price VAT</th>
                                        <th scope="col">Payment Type</th>
                                        <th scope="col">Action</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div id="details"></div>
                </div>
                <div class="col-md-12 text-center">
                    <div style="font-size: 2.5rem">Sale report</div>
                    <span id="sale" style="font-size: 2rem"></span>
                </div>
                <div class="card-body" id="hacim">
                    <table id="total" class="table table-bordered text-center" style="width:100%">
                        <thead>
                            <tr class="text-lite text-center">
                                <th scope="col">Total HPP</th>
                                <th scope="col">Total Amount</th>
                                <th scope="col">Total Price VAT</th>
                                <th scope="col">Cash Total</th>
                                <th scope="col">Bank Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td id="a"></td>
                                <td id="b"></td>
                                <td id="c"></td>
                                <td id="d"></td>
                                <td id="e"></td>
                            </tr>
                        </tbody>
                        @csrf
                    </table>
                </div>
                <div class="col-md-12 text-center">
                    <div style="font-size: 2.5rem">Sale Menu</div>
                    {{-- <span id="menu" style="font-size: 2rem"></span> --}}
                </div>
                <div class="card-body">
                    <table class="table table-bordered text-center" style="width:100%">
                        <thead>
                            <tr class="text-lite text-center">
                                <th scope="col">Menu</th>
                                <th scope="col">Total</th>
                            </tr>
                        </thead>
                        <tbody id="menus">

                        </tbody>
                    </table>
                </div>
            </div>
    </div>
@endsection

@push('after-script')
<script src="code.jquery.com/jquery-3.5.1.js"></script>
<script src="//cdn.datatables.net/buttons/1.6.5/js/dataTables.buttons.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="//cdn.datatables.net/buttons/1.6.5/js/buttons.html5.min.js"></script>
<script src="//cdn.datatables.net/buttons/1.6.5/js/buttons.print.min.js"></script>
<script type="text/javascript">
$(document).ready(function(){
    $('.input-daterange').datepicker({
        format: 'dd-mm-yyyy',
        autoclose: true,
    });
    load_data();
    function load_data(date_start = '', date_end = '')
    {
        $('#datatable').DataTable({
            responsive: true,
            processing: true,
            serverSide: true,
            dom: 'Bfrtip',
            buttons: [
            'copy', 'csv', 'excel', 'pdf', 'print'
            ],
            ajax: {
                url: "{{ route('report.index') }}",
                data: {date_start: date_start, date_end:date_end},
                type: "GET"
            },
            columns: [
                {data: 'DT_RowIndex', name: 'id', width: '15px'},
                {data: 'updated_at', name: 'updated_at'},
                {data: 'user_name', name: 'user_name'},
                {data: 'total_hpp', name: 'total_hpp'},
                {data: 'total_price', name: 'total_price'},
                {data: 'total_vat', name: 'total_vat'},
                {data: 'total_vatprice', name: 'total_vatprice'},
                {data: 'payment_type', name: 'payment_type'},
                {data: 'action', name: 'action', orderable: false, searchable: false},
            ]
        });
    }

    fecthData();
    function fecthData(date_start = '', date_end='')
    {
        $.ajax({
            url: "{{route('report.resume')}}",
            type: "GET",
            dataType:"json",
            data: {date_start: date_start, date_end:date_end},
            success: function(data)
            {
                $('#a').html('Rp. ').append(data.hpp);
                $('#b').html('Rp. ').append(data.price);
                $('#c').html('Rp. ').append(data.vatprice);
                $('#d').html('Rp. ').append(data.cash);
                $('#e').html('Rp. ').append(data.bank);
                $('#menus').html(data.menus);
            },
            error: function(data)
            {
                alert('not responding');
            }
        });
    }

    // excel();
    // function excel(date_start)

    $('#filter').click(function(){
        var date_start = $('#date_start').val();
        var date_end = $('#date_end').val();
        if(date_start != '' && date_end != ''){
            $('#sale').html(date_start).append(' to ', date_end );
            $('#datatable').DataTable().destroy();
            load_data(date_start, date_end);
            fecthData(date_start, date_end);
        }else{
            alert('Both date is required');
        }
    });

    $('#refresh').click(function(){
        $('#date_start').val('');
        $('#date_end').val('');
        $('#datatable').DataTable().destroy();
        $('#sale').hide();
        load_data();
        fecthData();
    });

    $('body').on('click', '.view-detail', function(event){
            event.preventDefault();
            var me = $(this),
                url = me.attr('href');

            $.ajax({
                url: url,
                dataType: 'html',
                success: function(response){
                    $('#details').html(response);
                    $('.btn-cobi').click(function(response){
                        $('#details').hide();
                    });
                }
            });
        });

        $('body').on('click', '.view-detail', function(response){
            $('#details').show();
        });
});
</script>
@endpush
